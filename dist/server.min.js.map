{"version":3,"sources":["server.js"],"names":["express","require","path","controller","exphbs","session","Store","sequelize","secret","cookie","resave","saveUninitialized","store","SequlizeStore","db","process","env","PORT","app","use","urlencoded","extended","join","__dirname","sess","engine","set","then","listen","console","log","concat","err"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,KAAOD,QAAQ,QAEfE,WAAaF,QAAQ,iBAErBG,OAASH,QAAQ,sBAFjBE,UAAaF,QAAQ,uBAMrBI,QAAUJ,QAAQ,mBAJlBG,cAAiBH,QAAA,4BAAAA,CACvBI,QAAAC,OACMC,KAAS,CAObC,OAAQ,sBACRC,OAAQ,GANVC,QAAML,EAQJM,mBAAmB,EAPrBC,MAAMC,IAAAA,cAAuB,CASzBC,GAAIP,aAJNE,IAFWT,UAGXU,KAAQK,QAHGC,IAAAC,MAAA,KAMTH,IAAAA,IAAIP,QAAAA,QADmBW,IAAlBC,IAAAnB,QAAAoB,WAAA,CAAAC,UAAA,KALIH,IASbC,IAAAnB,QAAA,OAAAE,KAAAoB,KAAAC,UAAA,YAQAL,IAAIC,IAAId,QAAQmB,OAGhBN,IAAIC,IAAI,IAAKhB,YALgBkB,IAAAA,OAAQ,aAAEjB,OAAAqB,UAAZP,IAA3BQ,IAAA,cAAA,cAEAR,UAAQb,KAAO,CAACmB,OAEhB,IAAAG,KAAA,WAQET,IAAIU,OAAOX,KAAM,WAAA,OAAMY,QAAQC,IAAR,yBAAAC,OAAqCd,WAJ9DC,QAAIO,GAAO,oBAAqBA,SAAhCO,GACAd,QAAQY,IAAAE","file":"server.min.js","sourcesContent":["const express = require(\"express\");\r\nconst path = require(\"path\");\r\n//paths\r\nconst controller = require(\"./controllers\");\r\n//handlebars\r\nconst exphbs = require(\"express-handlebars\");\r\n//Sequelize\r\nconst sequelize = require(\"./config/connection\");\r\n//Session\r\nconst session = require(\"express-session\");\r\nconst SequlizeStore = require(\"connect-session-sequelize\")(session.Store);\r\n\r\n//set up the actual session\r\nconst sess = {\r\n  secret: \"super secret secret\",\r\n  cookie: {},\r\n  resave: false,\r\n  saveUninitialized: true,\r\n  store: new SequlizeStore({\r\n    db: sequelize,\r\n  }),\r\n};\r\n//initialize the server\r\nconst app = express();\r\nconst PORT = process.env.PORT || 3306;\r\n\r\n//middlewear\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: true }));\r\napp.use(express.static(path.join(__dirname, \"public\")));\r\napp.use(session(sess));\r\n\r\n//use controllers\r\napp.use(\"/\", controller);\r\n\r\n//set handlebars as render engine\r\napp.engine(\"handlebars\", exphbs.engine());\r\napp.set(\"view engine\", \"handlebars\");\r\n\r\nsequelize.sync({ force: false }).then(() => {\r\n  app.listen(PORT, () => console.log(`Now listening on port ${PORT}`));\r\n});\r\n\r\nprocess.on('uncaughtException', function (err) {\r\n  console.log(err);\r\n});"]}