{"version":3,"sources":["users.js"],"names":["require","Model","DataTypes","sequelize","User","init","id","type","INTEGER","allowNull","primaryKey","autoIncrement","name","STRING","email","password","validate","len","timestamps","freezeTableName","underscored","modelName","module","exports"],"mappings":";;;;;;;;;;;;;;;;AAAA;eAIIA,OAAO,CAAC,WAAD,C;IAFPC,K,YAAAA,K;IACAC,S,YAAAA,S;;AAEJ,IAAMC,SAAS,GAAGH,OAAO,CAAC,sBAAD,CAAzB,C,CACA;AAEA;;;IACMI,I;;;;;;;;;;;;EAAaH,K;;AAQnB;AACAG,IAAI,CAACC,IAAL,CAAU;AAENC,EAAAA,EAAE,EAAE;AACAC,IAAAA,IAAI,EAAEL,SAAS,CAACM,OADhB;AAEAC,IAAAA,SAAS,EAAE,KAFX;AAGAC,IAAAA,UAAU,EAAE,IAHZ;AAIAC,IAAAA,aAAa,EAAE;AAJf,GAFE;AAQNC,EAAAA,IAAI,EAAE;AACFL,IAAAA,IAAI,EAAEL,SAAS,CAACW,MADd;AAEFJ,IAAAA,SAAS,EAAE;AAFT,GARA;AAaNK,EAAAA,KAAK,EAAE;AACHP,IAAAA,IAAI,EAAEL,SAAS,CAACW,MADb;AAEHJ,IAAAA,SAAS,EAAE;AAFR,GAbD;AAkBNM,EAAAA,QAAQ,EAAE;AACNR,IAAAA,IAAI,EAAEL,SAAS,CAACW,MADV;AAENJ,IAAAA,SAAS,EAAE,KAFL;AAGNO,IAAAA,QAAQ,EAAE;AACNC,MAAAA,GAAG,EAAE,CAAC,CAAD;AADC;AAHJ;AAlBJ,CAAV,EAyBG;AAEC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAd,EAAAA,SAAS,EAATA,SAbD;AAcCe,EAAAA,UAAU,EAAE,KAdb;AAeCC,EAAAA,eAAe,EAAE,IAflB;AAgBCC,EAAAA,WAAW,EAAE,IAhBd;AAiBCC,EAAAA,SAAS,EAAE;AAjBZ,CAzBH,E,CA6CA;;AACAC,MAAM,CAACC,OAAP,GAAiBnB,IAAjB","sourcesContent":["// Import necessary dependencies\r\nconst {\r\n    Model,\r\n    DataTypes\r\n} = require('sequelize');\r\nconst sequelize = require('../config/connection');\r\n// const bcrypt = require('bcrypt');\r\n\r\n// Define a User model that extends Sequelize's Model class\r\nclass User extends Model {\r\n\r\n    \r\n    // checkPassword(loginPw) {\r\n    //     return bcrypt.compareSync(loginPw, this.password);\r\n    // }\r\n}\r\n\r\n// Initialize the User model with its attributes and options\r\nUser.init({\r\n    \r\n    id: {\r\n        type: DataTypes.INTEGER,\r\n        allowNull: false,\r\n        primaryKey: true,\r\n        autoIncrement: true\r\n    },\r\n    name: {\r\n        type: DataTypes.STRING,\r\n        allowNull: false\r\n    },\r\n    \r\n    email: {\r\n        type: DataTypes.STRING,\r\n        allowNull: false\r\n    },\r\n    \r\n    password: {\r\n        type: DataTypes.STRING,\r\n        allowNull: false,\r\n        validate: {\r\n            len: [4]\r\n        }\r\n    }\r\n}, {\r\n    \r\n    // hooks: {\r\n    //     async beforeCreate(newUserData) {\r\n    //         newUserData.password = await bcrypt.hash(newUserData.password, 10);\r\n    //         return newUserData;\r\n    //     },\r\n    //     async beforeUpdate(updatedUserData) {\r\n    //         updatedUserData.password = await bcrypt.hash(updatedUserData.password, 10);\r\n    //         return updatedUserData;\r\n    //     }\r\n    // },\r\n   \r\n    sequelize,\r\n    timestamps: false,\r\n    freezeTableName: true,\r\n    underscored: true,\r\n    modelName: 'user'\r\n})\r\n\r\n// Export the User model for use in other modules\r\nmodule.exports = User;\r\n"],"file":"users.dev.js"}