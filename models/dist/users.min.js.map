{"version":3,"sources":["users.js"],"names":["require","Model","DataTypes","sequelize","User","id","INTEGER","allowNull","primaryKey","autoIncrement","name","type","STRING","email","password","validate","len","modelName","module","exports"],"mappings":"ipCAIIA,QAAQ,aAFRC,eAAAA,MACAC,mBAAAA,UAEEC,UAAYH,QAAQ,wBAIpBI,yJAAaH,YASnBG,KAhBIH,KAgBM,CAENI,GAAI,CAfFF,KAASD,UAAWI,QAG1BC,WAAA,EAeQC,YAAY,EACZC,eAAe,GAEnBC,KAAM,CACFC,KAAMT,UAAUU,OAChBL,WAAW,GAGfM,MAAO,CACHF,KAAMT,UAAUU,OAChBL,WAAW,GAGfO,SAAU,CACNH,KAAMT,UAAUU,OAChBL,WAAW,EArBnBQ,SAAA,CACUC,IAAA,CAAA,MAIFT,CAeAI,UAAAA,UACAJ,YAAW,EACXQ,iBAAU,EACNC,aAAK,EADCC,UAAA,SAOdC,OAAAC,QAAAf","file":"users.min.js","sourcesContent":["// Import necessary dependencies\r\nconst {\r\n    Model,\r\n    DataTypes\r\n} = require('sequelize');\r\nconst sequelize = require('../config/connection');\r\n// const bcrypt = require('bcrypt');\r\n\r\n// Define a User model that extends Sequelize's Model class\r\nclass User extends Model {\r\n\r\n    \r\n    // checkPassword(loginPw) {\r\n    //     return bcrypt.compareSync(loginPw, this.password);\r\n    // }\r\n}\r\n\r\n// Initialize the User model with its attributes and options\r\nUser.init({\r\n    \r\n    id: {\r\n        type: DataTypes.INTEGER,\r\n        allowNull: false,\r\n        primaryKey: true,\r\n        autoIncrement: true\r\n    },\r\n    name: {\r\n        type: DataTypes.STRING,\r\n        allowNull: false\r\n    },\r\n    \r\n    email: {\r\n        type: DataTypes.STRING,\r\n        allowNull: false\r\n    },\r\n    \r\n    password: {\r\n        type: DataTypes.STRING,\r\n        allowNull: false,\r\n        validate: {\r\n            len: [4]\r\n        }\r\n    }\r\n}, {\r\n    \r\n    // hooks: {\r\n    //     async beforeCreate(newUserData) {\r\n    //         newUserData.password = await bcrypt.hash(newUserData.password, 10);\r\n    //         return newUserData;\r\n    //     },\r\n    //     async beforeUpdate(updatedUserData) {\r\n    //         updatedUserData.password = await bcrypt.hash(updatedUserData.password, 10);\r\n    //         return updatedUserData;\r\n    //     }\r\n    // },\r\n   \r\n    sequelize,\r\n    timestamps: false,\r\n    freezeTableName: true,\r\n    underscored: true,\r\n    modelName: 'user'\r\n})\r\n\r\n// Export the User model for use in other modules\r\nmodule.exports = User;\r\n"]}