{"version":3,"sources":["login.js"],"names":["loginFormHandler","event","preventDefault","email","document","querySelector","value","trim","password","alert","fetch","method","body","JSON","stringify","headers","response","ok","console","log","location","replace","Error","statusText","error","signupFormHandler","username","responseTwo","addEventListener"],"mappings":";;AAAA;AACA,SAAeA,gBAAf,CAAgCC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AACIA,UAAAA,KAAK,CAACC,cAAN;AACMC,UAAAA,KAFV,GAEkBC,QAAQ,CAACC,aAAT,CAAuB,cAAvB,EAAuCC,KAAvC,CAA6CC,IAA7C,EAFlB;AAGUC,UAAAA,QAHV,GAGqBJ,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,EAA0CC,KAA1C,CAAgDC,IAAhD,EAHrB;;AAAA,gBAKQ,CAACJ,KAAD,IAAU,CAACK,QALnB;AAAA;AAAA;AAAA;;AAMMC,UAAAA,KAAK,CAAC,uCAAD,CAAL;AANN;;AAAA;AAAA;AAAA;AAAA,0CAW6BC,KAAK,CAAC,kBAAD,EAAqB;AAC/CC,YAAAA,MAAM,EAAE,MADuC;AAE/CC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBX,cAAAA,KAAK,EAALA,KADmB;AAEnBK,cAAAA,QAAQ,EAARA;AAFmB,aAAf,CAFyC;AAM/CO,YAAAA,OAAO,EAAE;AAAE,8BAAgB;AAAlB;AANsC,WAArB,CAXlC;;AAAA;AAWYC,UAAAA,QAXZ;;AAAA,eAoBUA,QAAQ,CAACC,EApBnB;AAAA;AAAA;AAAA;;AAqBQC,UAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsB,0BAAtB;AACAZ,UAAAA,QAAQ,CAACgB,QAAT,CAAkBC,OAAlB,CAA0B,GAA1B;AAtBR;AAAA;;AAAA;AAAA,gBAwBc,IAAIC,KAAJ,CAAUN,QAAQ,CAACO,UAAnB,CAxBd;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA2BML,UAAAA,OAAO,CAACM,KAAR;AACAf,UAAAA,KAAK,CAAC,qCAAD,CAAL;;AA5BN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAgCE;;;AACA,SAAegB,iBAAf,CAAiCxB,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AACEA,UAAAA,KAAK,CAACC,cAAN;AACMwB,UAAAA,QAFR,GAEmBtB,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,EAA2CC,KAA3C,CAAiDC,IAAjD,EAFnB;AAGQJ,UAAAA,KAHR,GAGgBC,QAAQ,CAACC,aAAT,CAAuB,eAAvB,EAAwCC,KAAxC,CAA8CC,IAA9C,EAHhB;AAIQC,UAAAA,QAJR,GAImBJ,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,EAA2CC,KAA3C,CAAiDC,IAAjD,EAJnB;;AAAA,gBAMM,CAACmB,QAAD,IAAa,CAACvB,KAAd,IAAuB,CAACK,QAN9B;AAAA;AAAA;AAAA;;AAOIC,UAAAA,KAAK,CAAC,6BAAD,CAAL;AAPJ;;AAAA;AAAA;AAAA;AAAA,0CAY2BC,KAAK,CAAC,YAAD,EAAe;AACzCC,YAAAA,MAAM,EAAE,MADiC;AAEzCC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBY,cAAAA,QAAQ,EAARA,QADmB;AAEnBvB,cAAAA,KAAK,EAALA,KAFmB;AAGnBK,cAAAA,QAAQ,EAARA;AAHmB,aAAf,CAFmC;AAOzCO,YAAAA,OAAO,EAAE;AAAE,8BAAgB;AAAlB;AAPgC,WAAf,CAZhC;;AAAA;AAYUC,UAAAA,QAZV;;AAAA,eAsBQA,QAAQ,CAACC,EAtBjB;AAAA;AAAA;AAAA;;AAuBMC,UAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAvBN;AAAA;;AAAA;AAAA,gBAyBY,IAAIM,KAAJ,CAAUN,QAAQ,CAACO,UAAnB,CAzBZ;;AAAA;AAAA;AAAA,0CA4B8Bb,KAAK,CAAC,kBAAD,EAAqB;AAClDC,YAAAA,MAAM,EAAE,MAD0C;AAElDC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBX,cAAAA,KAAK,EAALA,KADmB;AAEnBK,cAAAA,QAAQ,EAARA;AAFmB,aAAf,CAF4C;AAMlDO,YAAAA,OAAO,EAAE;AAAE,8BAAgB;AAAlB;AANyC,WAArB,CA5BnC;;AAAA;AA4BUY,UAAAA,WA5BV;;AAAA,eAqCQA,WAAW,CAACV,EArCpB;AAAA;AAAA;AAAA;;AAsCMC,UAAAA,OAAO,CAACC,GAAR,CAAYQ,WAAZ,EAAyB,0BAAzB;AACAvB,UAAAA,QAAQ,CAACgB,QAAT,CAAkBC,OAAlB,CAA0B,GAA1B;AAvCN;AAAA;;AAAA;AAAA,gBAyCY,IAAIC,KAAJ,CAAUK,WAAW,CAACJ,UAAtB,CAzCZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA4CIL,UAAAA,OAAO,CAACM,KAAR;AACAf,UAAAA,KAAK,CAAC,gDAAD,CAAL;;AA7CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAiDA;;;AACAL,QAAQ,CAACC,aAAT,CAAuB,YAAvB,EAAqCuB,gBAArC,CAAsD,OAAtD,EAA+D5B,gBAA/D;AACAI,QAAQ,CAACC,aAAT,CAAuB,aAAvB,EAAsCuB,gBAAtC,CAAuD,OAAvD,EAAgEH,iBAAhE","sourcesContent":["// Handle login\r\nasync function loginFormHandler(event) {\r\n    event.preventDefault();\r\n    const email = document.querySelector(\"#email-login\").value.trim();\r\n    const password = document.querySelector(\"#password-login\").value.trim();\r\n  \r\n    if (!email || !password) {\r\n      alert(\"Please enter your email and password.\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await fetch(\"/api/users/login\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          email,\r\n          password,\r\n        }),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        console.log(response, \" Logged in successfully!\");\r\n        document.location.replace(\"/\");\r\n      } else {\r\n        throw new Error(response.statusText);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to log in. Please try again.\");\r\n    }\r\n  }\r\n  \r\n  // Handle signup/register\r\n  async function signupFormHandler(event) {\r\n    event.preventDefault();\r\n    const username = document.querySelector(\"#username-signup\").value.trim();\r\n    const email = document.querySelector(\"#email-signup\").value.trim();\r\n    const password = document.querySelector(\"#password-signup\").value.trim();\r\n  \r\n    if (!username || !email || !password) {\r\n      alert(\"Please fill out all fields.\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await fetch(\"/api/users\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          username,\r\n          email,\r\n          password,\r\n        }),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        console.log(response);\r\n      } else {\r\n        throw new Error(response.statusText);\r\n      }\r\n  \r\n      const responseTwo = await fetch(\"/api/users/login\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          email,\r\n          password,\r\n        }),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      });\r\n  \r\n      if (responseTwo.ok) {\r\n        console.log(responseTwo, \" Logged in successfully!\");\r\n        document.location.replace(\"/\");\r\n      } else {\r\n        throw new Error(responseTwo.statusText);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to sign up or log in. Please try again.\");\r\n    } \r\n  }\r\n  \r\n  // Add event listeners to the buttons\r\n  document.querySelector(\"#login-btn\").addEventListener(\"click\", loginFormHandler);\r\n  document.querySelector(\"#signup-btn\").addEventListener(\"click\", signupFormHandler);\r\n  "],"file":"login.dev.js"}