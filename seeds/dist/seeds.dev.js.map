{"version":3,"sources":["seeds.js"],"names":["sequelize","require","User","userData","seedDatabase","sync","force","bulkCreate","individualHooks","returning","users","process","exit"],"mappings":";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,sBAAD,CAAzB,C,CACA;;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,iBAAD,CAApB;;AACA,IAAME,QAAQ,GAAGF,OAAO,CAAC,iBAAD,CAAxB;;AAEA,IAAMG,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACbJ,SAAS,CAACK,IAAV,CAAe;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAf,CADa;;AAAA;AAAA;AAAA,0CAGCJ,IAAI,CAACK,UAAL,CAAgBJ,QAAhB,EAA0B;AAC5CK,YAAAA,eAAe,EAAE,IAD2B;AAE5CC,YAAAA,SAAS,EAAE;AAFiC,WAA1B,CAHD;;AAAA;AAGbC,UAAAA,KAHa;AAQrB;AACA;AACA;AACA;AACA;AACA;AAEEC,UAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;;AAfmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;;AAkBAR,YAAY","sourcesContent":["const sequelize = require('../config/connection');\r\n// const { User } = require('../models/users');\r\nconst User = require(\"../models/users\")\r\nconst userData = require('./userData.json');\r\n\r\nconst seedDatabase = async () => {\r\n  await sequelize.sync({ force: true });\r\n\r\n  const users = await User.bulkCreate(userData, {\r\n    individualHooks: true,\r\n    returning: true,\r\n  });\r\n\r\n//   for (const project of projectData) {\r\n//     await Project.create({\r\n//       ...project,\r\n//       user_id: users[Math.floor(Math.random() * users.length)].id,\r\n//     });\r\n//   }\r\n\r\n  process.exit(0);\r\n};\r\n\r\nseedDatabase();\r\n"],"file":"seeds.dev.js"}