{"version":3,"sources":["seeds.js"],"names":["sequelize","require","userData","User","regeneratorRuntime","async","_context","prev","next","awrap","sync","force","bulkCreate","seedDatabase","returning","sent","process","exit","stop","individualHooks"],"mappings":"aAAA,IAAMA,UAAYC,QAAQ,wBAApBD,KAASC,QAAGA,mBAGZC,SAAWD,QAAQ,mBADnBE,aAAe,WAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EAAAJ,mBAAAK,MAIbT,UAAUU,KAAK,CAAEC,OAAO,KAJX,KAAA,EAAA,OAAAL,EAAAE,KAAA,EAAAJ,mBAAAK,MAMCN,KAAKS,WAAWV,SAAU,CAH1CW,iBAAe,EAAAC,WAAA,KAHA,KAAA,EAAAR,EAAAS,KAGAC,QAAAC,KAAA,GAHA,KAAA,EAAA,IAAA,MAAA,OAAAX,EAAAY,WAOjBC","file":"seeds.min.js","sourcesContent":["const sequelize = require('../config/connection');\r\n// const { User } = require('../models/users');\r\nconst User = require(\"../models/users\")\r\nconst userData = require('./userData.json');\r\n\r\nconst seedDatabase = async () => {\r\n  await sequelize.sync({ force: true });\r\n\r\n  const users = await User.bulkCreate(userData, {\r\n    individualHooks: true,\r\n    returning: true,\r\n  });\r\n\r\n//   for (const project of projectData) {\r\n//     await Project.create({\r\n//       ...project,\r\n//       user_id: users[Math.floor(Math.random() * users.length)].id,\r\n//     });\r\n//   }\r\n\r\n  process.exit(0);\r\n};\r\n\r\nseedDatabase();\r\n"]}